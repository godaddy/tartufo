name: ci

on:
  push:
    branches: [ main, v3.x ]
  pull_request:
    branches: [ main, v3.x ]

jobs:
  tartufo:
    name: Run Tartufo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        name: Checkout the repo
      - uses: godaddy/tartufo-action@3d4684c758fa9fdaf9b9cb044d0b9daa86606525
        name: Run Tartufo
  unit-test:
    name: Unit Tests
    needs: [ tartufo ]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9, "3.10", 3.11]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pypoetry
          - os: windows-latest
            path: ~\AppData\Local\pypoetry\Cache
          - os: macos-latest
            path: ~/Library/Caches/pypoetry
    runs-on: ${{ matrix.os }}
    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      name: Checkout the repo
    - uses: actions/cache@c17f4bf4666a8001b1a45c09eb7a485c41aa64c3
      name: Cache Poetry & Tox deps
      with:
        path: |
          {{ matrix.path }}
          .tox
        key: ${{ matrix.os }}-venvs-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ matrix.os }}-venvs-${{ matrix.python-version }}
          ${{ matrix.os }}-venvs
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Enchant
      run: brew install enchant
      if: ${{ matrix.os == 'macos-latest' && matrix.python-version == '3.7' }}
    - name: Install dependencies
      run: |
        pip install -U pip
        pip install poetry tox tox-gh-actions
      # run:  pip install poetry tox codecov tox-gh-actions
    - name: Unit test in Python ${{ matrix.python-version }} on ${{ matrix.os }}
      run: tox -vv
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@e156083f13aff6830c92fc5faa23505779fbf649
    #   with:
    #     file: coverage.xml
    #     env_vars: OS,PYTHON
  linting:
    name: Linting
    runs-on: ubuntu-latest
    needs: [ tartufo ]
    strategy:
      fail-fast: false
      matrix:
        toxenv: [pylint, vulture, mypy, black, docs]
    steps:
    - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      name: Checkout the repo
    - uses: actions/cache@c17f4bf4666a8001b1a45c09eb7a485c41aa64c3
      name: Cache Poetry & Tox deps
      with:
        path: |
          ~/.cache/pypoetry
          .tox
        key: venvs-${{ matrix.toxenv }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          venvs-${{ matrix.toxenv }}-
    - name: Set up Python
      uses: actions/setup-python@2c3dd9e7e29afd70cc0950079bde6c979d1f69f9
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        pip install -U pip
        pip install poetry tox
    - name: Run ${{ matrix.toxenv }}
      run: |
        tox -vv -e ${{ matrix.toxenv }}
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [ tartufo ]
    steps:
    - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      name: Checkout the repo
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325
      with:
        install: true
    - name: Build and Verify
      run: |
        docker build --load -t sanitycheck .
        docker run --rm -v $PWD:/git sanitycheck scan-local-repo /git
